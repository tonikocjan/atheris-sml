AstBindings [1:1, 9:18]:
  AstFunBinding [1:1, 3:31]:
    -> typed: fn : [('Z * int)] -> int
    AstIdentifierPattern [1:5, 1:8]:
      -> typed: fn : [('Z * int)] -> int
      Name: pow
    AstTuplePattern [1:9, 1:17]:
      -> typed: ('Z * int)
      AstIdentifierPattern [1:10, 1:11]:
        -> typed: 'Z
        Name: x
      AstIdentifierPattern [1:13, 1:14]:
        -> typed: int
        Name: y
    AstLetExpression [2:6, 3:31]:
      -> typed: int
      AstBindings [3:11, 3:31]:
        AstValBinding [3:11, 3:31]:
          -> typed: (int * int)
          AstTuplePattern [3:15, 3:23]:
            -> typed: (int * int)
            AstIdentifierPattern [3:16, 3:17]:
              -> typed: int
              Name: a
            AstIdentifierPattern [3:19, 3:20]:
              -> typed: int
              Name: b
          AstTupleExpression [3:25, 3:31]:
            -> typed: (int * int)
            AstConstantExpression [3:25, 3:27]:
              -> typed: int
              Value: 10
              Atom type: int
            AstConstantExpression [3:29, 3:31]:
              -> typed: int
              Value: 20
              Atom type: int
      AstIfExpression [5:11, 6:36]:
        -> typed: int
        AstBinaryExpression `=` [5:14, 5:19]:
          -> typed: bool
          AstNameExpression [5:14, 5:15]:
            -> defined at:  [1:13, 1:14]:
            -> typed: int
            Name: y
          AstConstantExpression [5:18, 5:19]:
            -> typed: int
            Value: 0
            Atom type: int
        AstConstantExpression [5:25, 5:26]:
          -> typed: int
          Value: 1
          Atom type: int
        AstBinaryExpression `+` [6:17, 6:36]:
          -> typed: int
          AstFunctionCallExpression [6:17, 6:30]:
            -> defined at:  [1:5, 1:8]:
            -> typed: int
            Function name: pow
            AstTupleExpression [6:22, 6:30]:
              -> typed: ('Z * int)
              AstNameExpression [6:22, 6:23]:
                -> defined at:  [1:10, 1:11]:
                -> typed: 'Z
                Name: x
              AstBinaryExpression `-` [6:25, 6:30]:
                -> typed: int
                AstNameExpression [6:25, 6:26]:
                  -> defined at:  [1:13, 1:14]:
                  -> typed: int
                  Name: y
                AstConstantExpression [6:29, 6:30]:
                  -> typed: int
                  Value: 1
                  Atom type: int
          AstNameExpression [6:35, 6:36]:
            -> defined at:  [3:16, 3:17]:
            -> typed: int
            Name: a
  AstValBinding [9:1, 9:18]:
    -> typed: int
    AstIdentifierPattern [9:5, 9:6]:
      -> typed: int
      Name: x
    AstFunctionCallExpression [9:9, 9:18]:
      -> defined at:  [1:5, 1:8]:
      -> typed: int
      Function name: pow
      AstTupleExpression [9:14, 9:18]:
        -> typed: ('Z * int)
        AstConstantExpression [9:14, 9:15]:
          -> typed: int
          Value: 3
          Atom type: int
        AstConstantExpression [9:17, 9:18]:
          -> typed: int
          Value: 3
          Atom type: int
