; Generated by SML -> Racket ðŸš€ compiler (`https://gitlab.com/seckmaster/atheris-swift/tree/sml`)

#lang racket

(define x (list 2 3 4 5))
x
(define x1 (cond 
  [(= (length x) 0) 1]
  [(> (length x) 3) (let (
    [h1 (car x)]
    [h2 (car (cdr x))]
    [h3 (car (cdr (cdr x)))]) (+ (+ h1 h2) h3))]
  [(> (length x) 2) (let (
    [h1 (car x)]
    [h2 (car (cdr x))]) (+ h1 h2))]
  [(> (length x) 1) (let (
    [h (car x)]) (+ h 100))]
  ))
x1
