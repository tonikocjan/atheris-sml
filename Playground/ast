AstBindings [1:1, 19:14]:
  AstDatatypeBinding [1:1, 4:9]:
    -> typed: A
    AstIdentifierPattern [1:10, 1:11]:
      Name: A
    AstCase [2:6, 2:14]:
      -> typed: (int) A
      AstIdentifierPattern [2:6, 2:7]:
        Name: X
      AstTypeName [2:11, 2:14]:
        -> typed: int
        Name: int
    AstCase [3:8, 3:16]:
      -> typed: (int) A
      AstIdentifierPattern [3:8, 3:9]:
        Name: Y
      AstTypeName [3:13, 3:16]:
        -> typed: int
        Name: int
    AstCase [4:8, 4:9]:
      -> typed: (int) A
      AstIdentifierPattern [4:8, 4:9]:
        Name: Z
  AstValBinding [6:1, 9:14]:
    -> typed: int
    AstIdentifierPattern [6:1, 9:14]:
      -> typed: int
      Name: x1
    AstCaseExpression [6:1, 9:14]:
      -> typed: int
      AstFunctionCallExpression [6:6, 6:10]:
        -> defined at:  [2:6, 2:14]:
        -> typed: (int) A
        Function name: X
        AstConstantExpression [6:8, 6:10]:
          -> typed: int
          Value: 10
          Atom type: int
      AstMatch [7:6, 9:14]:
        -> typed: (int) A => int
        AstRule [7:6, 7:14]:
          -> typed: (int) A => int
          AstIdentifierPattern [7:6, 7:7]:
            -> defined at:  [2:6, 2:14]:
            -> typed: (int) A
            Name: X
          AstIdentifierPattern [7:8, 7:9]:
            -> typed: int
            Name: a
          AstConstantExpression [7:13, 7:14]:
            -> typed: int
            Value: 1
            Atom type: int
        AstRule [8:8, 8:16]:
          -> typed: (int) A => int
          AstIdentifierPattern [8:8, 8:9]:
            -> defined at:  [3:8, 3:16]:
            -> typed: (int) A
            Name: Y
          AstIdentifierPattern [8:10, 8:11]:
            -> typed: int
            Name: a
          AstConstantExpression [8:15, 8:16]:
            -> typed: int
            Value: 2
            Atom type: int
        AstRule [9:8, 9:14]:
          -> typed: A => int
          AstIdentifierPattern [9:8, 9:9]:
            -> defined at:  [4:8, 4:9]:
            -> typed: A
            Name: Z
          AstConstantExpression [9:13, 9:14]:
            -> typed: int
            Value: 0
            Atom type: int
  AstValBinding [11:1, 14:14]:
    -> typed: int
    AstIdentifierPattern [11:1, 14:14]:
      -> typed: int
      Name: x2
    AstCaseExpression [11:1, 14:14]:
      -> typed: int
      AstFunctionCallExpression [11:6, 11:10]:
        -> defined at:  [3:8, 3:16]:
        -> typed: (int) A
        Function name: Y
        AstConstantExpression [11:8, 11:10]:
          -> typed: int
          Value: 10
          Atom type: int
      AstMatch [12:6, 14:14]:
        -> typed: (int) A => int
        AstRule [12:6, 12:14]:
          -> typed: (int) A => int
          AstIdentifierPattern [12:6, 12:7]:
            -> defined at:  [2:6, 2:14]:
            -> typed: (int) A
            Name: X
          AstIdentifierPattern [12:8, 12:9]:
            -> typed: int
            Name: a
          AstConstantExpression [12:13, 12:14]:
            -> typed: int
            Value: 1
            Atom type: int
        AstRule [13:8, 13:16]:
          -> typed: (int) A => int
          AstIdentifierPattern [13:8, 13:9]:
            -> defined at:  [3:8, 3:16]:
            -> typed: (int) A
            Name: Y
          AstIdentifierPattern [13:10, 13:11]:
            -> typed: int
            Name: a
          AstConstantExpression [13:15, 13:16]:
            -> typed: int
            Value: 2
            Atom type: int
        AstRule [14:8, 14:14]:
          -> typed: A => int
          AstIdentifierPattern [14:8, 14:9]:
            -> defined at:  [4:8, 4:9]:
            -> typed: A
            Name: Z
          AstConstantExpression [14:13, 14:14]:
            -> typed: int
            Value: 0
            Atom type: int
  AstValBinding [16:1, 19:14]:
    -> typed: int
    AstIdentifierPattern [16:1, 19:14]:
      -> typed: int
      Name: x3
    AstCaseExpression [16:1, 19:14]:
      -> typed: int
      AstNameExpression [16:6, 16:7]:
        -> defined at:  [4:8, 4:9]:
        -> typed: (int) A
        Name: Z
      AstMatch [17:6, 19:14]:
        -> typed: (int) A => int
        AstRule [17:6, 17:14]:
          -> typed: (int) A => int
          AstIdentifierPattern [17:6, 17:7]:
            -> defined at:  [2:6, 2:14]:
            -> typed: (int) A
            Name: X
          AstIdentifierPattern [17:8, 17:9]:
            -> typed: int
            Name: a
          AstConstantExpression [17:13, 17:14]:
            -> typed: int
            Value: 1
            Atom type: int
        AstRule [18:8, 18:16]:
          -> typed: (int) A => int
          AstIdentifierPattern [18:8, 18:9]:
            -> defined at:  [3:8, 3:16]:
            -> typed: (int) A
            Name: Y
          AstIdentifierPattern [18:10, 18:11]:
            -> typed: int
            Name: a
          AstConstantExpression [18:15, 18:16]:
            -> typed: int
            Value: 2
            Atom type: int
        AstRule [19:8, 19:14]:
          -> typed: A => int
          AstIdentifierPattern [19:8, 19:9]:
            -> defined at:  [4:8, 4:9]:
            -> typed: A
            Name: Z
          AstConstantExpression [19:13, 19:14]:
            -> typed: int
            Value: 0
            Atom type: int
